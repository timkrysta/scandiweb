version: '3.9'

services:

  clone-repos:
    image: ubuntu
    working_dir: /app
    volumes:
      - .:/app
    command: >
      sh -c '
        if [ ! -d ./scandiweb-backend ]; then
          apt-get update &&
          apt-get install -y git &&
          git clone https://github.com/timkrysta/scandiweb-backend.git ./scandiweb-backend
        fi &&
        if [ ! -d ./scandiweb-frontend ]; then
          apt-get update &&
          apt-get install -y git &&
          git clone https://github.com/timkrysta/scandiweb-frontend.git ./scandiweb-frontend
        fi
      '

  web:
    image: nginx:1.24.0
    working_dir: /var/www/html
    ports:
      - '8080:80'
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./scandiweb-backend:/var/www/html/scandiweb-backend
      - ./scandiweb-frontend:/var/www/html/scandiweb-frontend
    depends_on:
      - clone-repos

  react-build:
    image: node:18.16.0-alpine
    working_dir: /app
    volumes:
      - ./scandiweb-frontend:/app
    command: sh -c "npm install && npm run build"
    depends_on:
      - clone-repos

  mysql:
    image: mysql:8.0.33
    environment:
      MYSQL_ROOT_PASSWORD: toor
    volumes:
      - ./scandiweb-backend/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 10s
      retries: 3
    depends_on:
      - clone-repos
  
  composer:
    image: composer:latest
    working_dir: /app
    volumes:
      - ./scandiweb-backend:/app 
    command: sh -c "composer install --optimize-autoloader --no-dev --no-interaction"
    depends_on:
      - clone-repos

  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./scandiweb-backend:/var/www/html/scandiweb-backend
    depends_on:
      - clone-repos

volumes:
  mysql_data:
